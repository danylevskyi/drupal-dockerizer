---

- name: Clone docker solr4 repository.
  when: solr_version == 4
  git:
    repo: https://github.com/docker-solr/docker-solr4
    dest: "{{ docker_runtime_dir }}/bin/solr"
    version: master
    clone: yes
    update: yes
    force: yes

- name: Solr 4 user configure.
  blockinfile:
    path: "{{ docker_runtime_dir }}/bin/solr/Dockerfile"
    block: |
      {% if user_uid != 0 %}
      USER root
      ARG USER_UID={{ user_uid }}
      ARG USER_GID=$USER_UID
      RUN chown -R $USER_UID:$USER_GID /opt/solr
      RUN rm -rf /opt/solr/example/solr/collection1/
      RUN groupmod --gid $USER_GID solr && usermod --uid $USER_UID --gid $USER_GID solr
      USER solr
      {% endif %}

- name: Create solr directory
  when: solr_version != 4
  file:
    recurse: yes
    path: "{{ docker_runtime_dir }}/bin/solr"
    state: directory

- name: Create solr data directory
  file:
    recurse: yes
    path: "{{ docker_runtime_dir }}/data/solr"
    state: directory

- name: Ensure Solr Dokcerfile is present.
  when: solr_version != 4
  template:
    src: templates/solr.Dockerfile.j2
    dest: "{{ docker_runtime_dir }}/bin/solr/Dockerfile"
    mode: '644'

- name: Ensure Solr Core file is present.
  template:
    src: templates/solr.core.j2
    dest: "{{ docker_runtime_dir }}/data/solr/core.properties"
    mode: '644'

- name: Copy drupal solr config.
  command: cp -r "{{ solr_configs_path }}"/. "{{ docker_runtime_dir }}/data/solr/conf"

