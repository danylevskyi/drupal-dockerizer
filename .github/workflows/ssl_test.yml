name: Check ssl functionality

on:
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test_ssl:
    runs-on: ubuntu-20.04
    steps:
    - name: Cache Composer dependencies for improve speed
      uses: actions/cache@v2
      with:
        path: ~/.cache/composer
        key: ${{ runner.os }}-drupal

    - name: Get Drupal Project repository
      uses: actions/checkout@v2
      with:
        repository: 'drupal/recommended-project'
        path: './'
        ref: '9.2.x'

    - name: Run Composer install
      run: composer install --ignore-platform-reqs

    - name: Get Drupal Dockerizer repository
      uses: actions/checkout@v2
      with:
        path: '.drupal-dockerizer'

    - name: Create basic dockerizer.yml
      run: |
        echo "---" > dockerizer.yml
        echo "" >> dockerizer.yml
        echo "compose_project_name: drupal-project" >> dockerizer.yml
        echo "user_uid: $(id -u)" >> dockerizer.yml
        echo "user_gid: $(id -g)" >> dockerizer.yml
        echo "drupal_root_dir: $GITHUB_WORKSPACE" >> dockerizer.yml
        echo "advanced_networking: true" >> dockerizer.yml
        echo "network_id: 15" >> dockerizer.yml
        echo "domain_name: drupal.devel" >> dockerizer.yml

    - name: Run main playbook
      uses: dawidd6/action-ansible-playbook@v2
      with:
        playbook: main.yml
        directory: .drupal-dockerizer
        options: |
          --verbose

    - name: Run drush-commands playbook
      uses: dawidd6/action-ansible-playbook@v2
      with:
        playbook: drush-commands.yml
        directory: .drupal-dockerizer
        options: |
          --verbose

    - name: Check drupal.devel domain work
      run: curl http://drupal.devel | grep "Drupal"

    - name: Generate certificates for next step
      uses: kofemann/action-create-certificate@v0.0.4
      with:
        hostcert: 'hostcert.pem'
        hostkey:  'hostkey.pem'
        cachain:  'ca-chain.pem'

    - name: Enable ssl in dockerizer.yml
      run: |
        echo "ssl_key_path: $GITHUB_WORKSPACE/hostkey.pem" >> dockerizer.yml
        echo "ssl_cert_path: $GITHUB_WORKSPACE/hostkey.pem" >> dockerizer.yml
        echo "ssl_enabled: true" >> dockerizer.yml

    - name: Run main playbook with ssl configuration
      uses: dawidd6/action-ansible-playbook@v2
      with:
        playbook: main.yml
        directory: .drupal-dockerizer
        options: |
          --verbose

    - name: Check drupal.devel domain work with ssl
      run: curl https://drupal.devel | grep "Drupal"
